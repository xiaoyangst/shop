// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package model

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UsersGender string

const (
	UsersGenderMale   UsersGender = "Male"
	UsersGenderFemale UsersGender = "Female"
	UsersGenderOther  UsersGender = "Other"
)

func (e *UsersGender) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersGender(s)
	case string:
		*e = UsersGender(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersGender: %T", src)
	}
	return nil
}

type NullUsersGender struct {
	UsersGender UsersGender
	Valid       bool // Valid is true if UsersGender is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersGender) Scan(value interface{}) error {
	if value == nil {
		ns.UsersGender, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersGender.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersGender) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersGender), nil
}

// 用户表
type User struct {
	// 编号
	ID int64
	// 创建时间
	Createat time.Time
	// 更新时间
	Updateat time.Time
	// 删除时间
	Deleteat sql.NullTime
	// 是否删除
	Isdeleted bool
	// 手机号
	Mobile string
	// 密码
	Password string
	// 昵称
	Nikename string
	// 生日
	Birthday sql.NullTime
	// 性别
	Gender NullUsersGender
	// 角色
	Role sql.NullString
}
